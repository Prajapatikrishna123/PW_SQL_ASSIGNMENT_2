-- Question 1: Retrieve the total number of rentals made in the Sakila database. 
select count(*) as Total_rentals from rental;

-- Question 2: Find the average rental duration (in days) of movies rented from the Sakila database.
select avg(datediff(return_date , rental_date)) as avg_rental_duration from rental where return_date is not null;

-- Question 3: Display the first name and last name of customers in uppercase.
select upper(first_name) as First_name , upper(last_name) as last_name from customer;

-- Question 4: Extract the month from the rental date and display it alongside the rental ID.
select month(rental_date) as Rental_month ,rental_id from rental;

-- Question 5: Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
select  customer_id , count(*) as rental_count from rental group by customer_id;

-- Question 6: Find the total revenue generated by each store.
select s.Store_id , sum(p.amount) as total_revenue from payment p
join rental r on p.rental_id = r.rental_id
join inventory i on r.inventory_id = i.inventory_id
join store s on s.store_id = i.inventory_id
group by s.store_id;

-- Question 7: Display the title of the movie, customer s first name, and last name who rented it.
select f.title , c.first_name , c.last_name from customer c
join rental r on c.customer_id = r.customer_id
join inventory i on i.inventory_id = r.inventory_id
join film f on f.film_id = i.film_id;

-- Question 8: Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
SELECT a.first_name , a.last_name
FROM film f
JOIN film_actor fa ON f.film_id = fa.film_id
JOIN actor a ON fa.actor_id = a.actor_id
WHERE f.title = 'Gone with the Wind';

-- Question 9: Determine the total number of rentals for each category of movies.
SELECT c.name AS category_name, COUNT(r.rental_id) AS rental_count
FROM rental r
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film_category fc ON i.film_id = fc.film_id
JOIN category c ON fc.category_id = c.category_id
GROUP BY c.category_id;

-- Question 10: Find the average rental rate of movies in each language.
select avg(f.rental_rate) as avg_rental_rate , l.name from film f
join language l on l.language_id = f.language_id
group by l.name;

-- Question 11. Retrieve the customer names along with the total amount they've spent on rentals.
select c.first_name , c.last_name , sum(p.amount) total_amount from customer c
join payment p on p.customer_id = c.customer_id
join rental r on p.rental_id = r.rental_id
group by c.customer_id
order by total_amount desc;

-- Question 12. List the titles of movies rented by each customer in a particular city (e.g., 'London').
SELECT 
    c.first_name,c.last_name,ci.city,f.title
FROM rental r
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
JOIN customer c ON r.customer_id = c.customer_id
JOIN address a ON c.address_id = a.address_id
JOIN city ci ON a.city_id = ci.city_id
WHERE ci.city = 'London'
ORDER BY c.last_name, c.first_name, f.title;

-- Question 13. Display the top 5 rented movies along with the number of times they've been rented.
select f.title , count(r.rental_id) as rental_count from rental r
join inventory i on i.inventory_id = r.inventory_id
join film f on f.film_id = i.film_id
group by f.title
order by rental_count desc
limit 5;

-- Question 14. Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
select c.first_name , c.store_id from rental r
join inventory i on i.inventory_id = r.inventory_id
join customer c on c.store_id = i.store_id
group by i.store_id , c.first_name 
 ;
